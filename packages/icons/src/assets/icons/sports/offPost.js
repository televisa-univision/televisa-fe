import React from 'react';
import PropTypes from 'prop-types';
import { supportingArrays } from 'react-style-proptype';
import Svg, { G, Path, Circle } from 'svgs';

import {
  BLACK, WHITE, ALIZARIN_CRIMSON,
} from '@univision/fe-utilities/styled/constants';

/**
 * offPost component
 * @param {!Object} props - components props
 * @param {string} props.fill - custom fill color
 * @param {string} props.stroke - custom stroke color
 * @param {number} props.width - icon width size
 * @param {number} props.height - icon height size
 * @param {string} props.viewBox - viewBox layout
 * @param {string} props.className - class name modifier
 * @param {Object} props.style - style override
 * @returns {JSX}
 */
const offPost = ({
  fill,
  stroke,
  height,
  width,
  viewBox,
  className,
  style,
}) => (
  <Svg
    height={height}
    width={width}
    viewBox={viewBox}
    className={className}
    style={style}
  >
    <G fill="none" fillRule="evenodd">
      <Path fill={`${stroke || WHITE}`} fillRule="nonzero" d="M237 81v52.0295h-96.9644V238H89V81z" />
      <Path fill={ALIZARIN_CRIMSON} fillRule="nonzero" d="M211 81v52.0113h-70.6994V209H89V81z" />
      <Path stroke={BLACK} strokeWidth="11.0901" d="M84 239V76h154" />
      <Path stroke={BLACK} strokeWidth="11.0901" d="M146 239V138h92" />
      <Path stroke={BLACK} strokeWidth="3.327" fill={`${stroke || WHITE}`} strokeLinejoin="round" d="M76.9548 62.0312l-45.486-45.486-9.4236 9.4236 45.486 45.486zM90.4947 47.071L66.9289 23.5054l-9.4236 9.4236 23.5658 23.5658zM62.4947 76.071L38.9289 52.5054l-9.4236 9.4236 23.5658 23.5658z" />
      <Circle fill={`${stroke || WHITE}`} cx="125.5" cy="118.5" r="67.5" />
      <Path fill={`${fill || BLACK}`} fillRule="nonzero" d="M100.1018 55.9396c-8.3737 3.395-15.8875 8.387-22.3306 14.8282-6.4449 6.4431-11.431 13.9589-14.828 22.3309C59.664 101.187 58 109.7344 58 118.5019c0 8.7655 1.664 17.3129 4.9433 25.3976 3.3969 8.3738 8.3849 15.8896 14.828 22.3308 6.443 6.445 13.955 11.4332 22.3305 14.8282 8.0883 3.2831 16.6337 4.9415 25.401 4.9415 8.7673 0 17.3108-1.664 25.3991-4.9415 8.3719-3.395 15.8894-8.3832 22.3306-14.8282 6.4449-6.4412 11.433-13.9533 14.828-22.3308 3.2793-8.0847 4.9395-16.632 4.9395-25.3976 0-8.7675-1.662-17.3148-4.9395-25.4032-3.395-8.372-8.3868-15.8896-14.828-22.331-6.4412-6.4412-13.9513-11.433-22.3306-14.828C142.8136 52.662 134.2701 51 125.5028 51c-8.7673 0-17.3127 1.662-25.401 4.9396zm-25.2312 90.9781c-3.2514-2.0407-6.2472-4.3912-8.8998-7.1594-4.0516-11.4015-4.738-23.7449-2.0538-35.4616 1.2629-2.4903 2.6992-4.8817 4.324-7.1725.5018-.707.9663-1.4438 1.5035-2.1303l15.2327 9.0137v.3824c-.0391 8.193.7928 16.3261 2.4493 24.3418.0056.0373.0112.0578.0187.0914l-11.8136 18.5236c-.2574-.1306-.513-.2724-.761-.429zm45.2916 31.3147c2.6283 1.3412 5.3313 2.4736 8.1088 3.395-11.7985.513-23.7146-2.2515-34.2485-8.2954l25.5353 4.5497c.1959.125.3955.2444.6044.3507zm-.0933-4.6094l-30.1335-5.3705c-3.5255-4.2812-6.6967-8.8104-9.422-13.6511-.694-1.2312-1.468-2.427-2.0557-3.7122l11.8023-18.505c.2612.0654.5522.1344.8823.222 7.3833 1.9755 14.897 3.3802 22.463 4.4808.4421.0615.8115.1156 1.1267.1492l14.1472 24.4612c-2.4549 3.451-4.9377 6.8834-7.4747 10.2784-.4215.5652-.8692 1.108-1.3356 1.6472zm50.1342-10.4202c-2.3989 2.4008-4.9452 4.5646-7.6108 6.4935a57.8488 57.8488 0 00-2.2814-10.3773l15.0948-28.1603c4.158-1.8934 8.1685-4.0405 11.8918-6.7024.4869-.3451.8917-.7313 1.205-1.1529-1.093 14.5521-7.1929 28.7946-18.2994 39.8994zm-.6697-36.5211c.5615 1.0708 1.1155 2.1527 1.6714 3.2496L156.625 157.129c-.084.0186-.1641.0373-.248.0485-7.8813 1.4718-15.826 2.2553-23.8379 2.2926l-14.55-25.1589c2.2646-4.2046 4.5087-8.426 6.734-12.6493 1.511-2.8653 2.9959-5.7492 4.4789-8.6313l30.113-3.0929c3.6878 5.4098 7.1817 10.9351 10.2185 16.744zm-6.1091-32.2605c-1.429 3.7738-2.9585 7.5083-4.4788 11.2503l-29.3351 3.0127c-.3507-.4626-.7145-.9178-1.0969-1.3524-3.464-3.923-6.9504-7.8217-10.4312-11.7316.0317-.0392.0634-.069.0951-.1045-1.4046-1.4028-2.813-2.8056-4.2176-4.212l8.1666-24.5881c.5634-.1492 1.1305-.2742 1.7031-.3358 4.4397-.4514 8.8849-.9625 13.3357-1.22 2.7253-.153 5.4656-.2406 8.2376-.0447l20.2058 22.7748c-.6957 2.1975-1.3747 4.4005-2.1843 6.5513zm6.7788-20.624c5.5738 5.5776 9.8903 11.9424 12.942 18.7418-3.7755-2.5985-7.8122-4.7363-12.056-6.4785-.6603-.2724-1.3374-.513-2.0258-.75L149.1746 62.894c.138-.9682.2108-1.9382.2406-2.9157 7.566 3.0798 14.6582 7.6911 20.7879 13.819zm-64.9454-14.996c.0784.0578.1157.1063.1605.1193 4.546 1.5707 8.6815 3.8838 12.5801 6.6279l-7.6294 22.9763a.8195.8195 0 00-.1138.0391c-1.5613.6455-3.1525 1.2238-4.6896 1.9233-6.333 2.8783-12.5074 6.0663-18.3237 9.8885l-15.0555-8.9073c.0224-.4701.1026-.9476.263-1.373 1.011-2.6936 2.0053-5.4022 3.1488-8.0418.8804-2.0333 1.884-3.9975 2.979-5.917a65.34 65.34 0 012.2235-2.3393c7.15-7.1482 15.6003-12.224 24.597-15.2255a4.396 4.396 0 00-.1399.2295z" />
    </G>
  </Svg>
);

offPost.propTypes = {
  fill: PropTypes.string,
  stroke: PropTypes.string,
  width: PropTypes.number,
  height: PropTypes.number,
  viewBox: PropTypes.string,
  className: PropTypes.string,
  style: PropTypes.oneOfType([PropTypes.object, supportingArrays]),
};

export default offPost;
